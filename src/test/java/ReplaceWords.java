import org.junit.Test;

import java.io.*;

/**
 * @program springbootcachedemo
 * @description: 替换字段
 * @author: xielinzhi
 * @create: 2019/05/24 10:13
 */


public class ReplaceWords {

    @Test
    public void replaceWords() throws  Exception{
        File file = new File("/Users/xielinzhi/Downloads/OL39_POTL_RAMS_OL_CHECKLIST_RISKS.sql");
        String origin = "OL39_POTL.";
        String replaced = "";

        BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
        String line=null;
        CharArrayWriter caw=new CharArrayWriter();
        //以行为单位进行遍历
        while((line=br.readLine())!=null){
            //替换每一行中符合被替换字符条件的字符串
            line=line.replaceAll(origin, replaced);
            //将该行写入内存
            caw.write(line);
            //添加换行符，并进入下次循环
            caw.append(System.getProperty("line.separator"));
        }
        //关闭输入流
        br.close();

        //将内存中的流写入源文件
        FileWriter fw=new FileWriter(file);
        caw.writeTo(fw);
        fw.close();

    }

    @Test
    public void getlen(){
        String temp
        System.out.println(temp.length());
    }
}
